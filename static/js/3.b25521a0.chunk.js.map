{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileStatusWithHooks.js","assets/images/userPhoto.png","components/Profile/ProfileDataForm.js","components/Profile/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","cssObject","post","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","type","validate","required","MyPosts","postsElements","posts","map","p","key","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","content","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","profile","error","Input","style","formSummaryError","Object","keys","contacts","ProfileData","isOwner","goToEditMode","fullName","onClick","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","React","Preloader","photos","large","userPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.b25521a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Profile_userPhoto__3mn79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__gG0rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__wKqkw\"};","import React from \"react\";\r\nimport cssObject from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={cssObject.post}>\r\n      <img src=\"https://thispersondoesnotexist.com/image\" alt=\"userPhoto\" />\r\n      {props.message}\r\n      <div>\r\n        <span>Likes: {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport cssObject from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name=\"newPostText\"\r\n        component={Textarea}\r\n        placeholder=\"What's new?\"\r\n        type=\"text\"\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <div>\r\n        <button>Add text</button>\r\n        <button>Remove text</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddNewPostReduxForm = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((p, key) => (\r\n    <Post key={key} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={cssObject.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import { React, useState, useEffect } from \"react\";\r\n//import Preloader from \"../common/Preloader/Preloader\";\r\nimport cssObject from \"./Profile.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={cssObject.content}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"empty status\"}</span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n// if (!props.profile) {\r\n// return <Preloader />;\r\n//}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","export default __webpack_public_path__ + \"static/media/userPhoto.2c612852.png\";","import { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport style from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>\r\n        Full Name:\r\n        {\r\n          <Field\r\n            placeholder=\"Full Name\"\r\n            name=\"fullName\"\r\n            component={Input}\r\n            type=\"text\"\r\n            validate={[]}\r\n          />\r\n        }\r\n      </h3>\r\n      {error && <div className={style.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <button>Save</button>\r\n      </div>\r\n      <p>\r\n        About me:\r\n        {\r\n          <Field\r\n            placeholder=\"About me\"\r\n            name=\"aboutMe\"\r\n            component={Input}\r\n            type=\"text\"\r\n            validate={[]}\r\n          />\r\n        }\r\n      </p>\r\n      <p>\r\n        Looking for a job:\r\n        {<Field name=\"lookingForAJob\" component={Input} type=\"checkBox\" validate={[]} />}\r\n      </p>\r\n      <p>\r\n        My professional skills:\r\n        {\r\n          <Field\r\n            placeholder=\"My professional skills\"\r\n            name=\"lookingForAJobDescription\"\r\n            component={Input}\r\n            type=\"textArea\"\r\n            validate={[]}\r\n          />\r\n        }\r\n      </p>\r\n      <p>\r\n        Contacts:\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return (\r\n            <div key={key} className={''}>\r\n              <b>\r\n                {key}:\r\n                <Field\r\n                  placeholder={profile.contacts[key]}\r\n                  name={'contacts.' + key}\r\n                  component={Input}\r\n                  type=\"text\"\r\n                  validate={[]}\r\n                />\r\n              </b>\r\n            </div>\r\n          );\r\n        })}\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({\r\n  form: 'editProfile',\r\n})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport cssObject from './Profile.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../assets/images/userPhoto.png';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const onSubmit = (formData) => {\r\n    props.saveProfile(formData).then(() => setEditMode(false));\r\n  };\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cssObject.content}>\r\n      <img\r\n        src={props.profile.photos.large || userPhoto}\r\n        alt=\"UserPhoto\"\r\n        className={cssObject.userPhoto}\r\n      />\r\n      {props.isOwner && <input type=\"file\" onChange={onPhotoSelected} />}\r\n      <div>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        {editMode ? (\r\n          <ProfileDataForm\r\n            initialValues={props.profile}\r\n            profile={props.profile}\r\n            onSubmit={onSubmit}\r\n          />\r\n        ) : (\r\n          <ProfileData\r\n            profile={props.profile}\r\n            isOwner={props.isOwner}\r\n            goToEditMode={() => {\r\n              setEditMode(true);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      <h3>{profile.fullName}</h3>\r\n      {isOwner && (\r\n        <div>\r\n          <button onClick={goToEditMode}>Edit</button>\r\n        </div>\r\n      )}\r\n      <p>About me: {profile.aboutMe}</p>\r\n      <p>Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}</p>\r\n      <p>My professional skills: {profile.lookingForAJobDescription}</p>\r\n      <p>\r\n        Contacts:{' '}\r\n        {Object.keys(profile.contacts).map((key) => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />;\r\n        })}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport cssObject from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={cssObject.content}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n  savePhoto,\r\n  saveProfile,\r\n} from './../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        saveProfile={this.props.saveProfile}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}