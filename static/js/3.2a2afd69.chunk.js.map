{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileInfo.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js"],"names":["module","exports","Post","props","className","cssObject","post","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","type","validate","required","MyPosts","postsElements","posts","map","p","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","content","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","photos","large","userPhoto","fullName","aboutMe","Preloader","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.2a2afd69.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Profile_userPhoto__3mn79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__gG0rl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__wKqkw\"};","import React from \"react\";\r\nimport cssObject from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={cssObject.post}>\r\n      <img src=\"https://thispersondoesnotexist.com/image\" alt=\"userPhoto\" />\r\n      {props.message}\r\n      <div>\r\n        <span>Likes: {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport cssObject from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name='newPostText'\r\n        component={Textarea}\r\n        placeholder=\"What's new?\"\r\n        type='text'\r\n        validate={[required, maxLength10]}\r\n      />\r\n      <div>\r\n        <button>Add text</button>\r\n        <button>Remove text</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst AddNewPostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n  let postsElements = props.posts.map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddNewPostReduxForm onSubmit={onAddPost} />\r\n      <div className={cssObject.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import MyPosts from \"./MyPosts\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import { React, useState, useEffect } from \"react\";\r\n//import Preloader from \"../common/Preloader/Preloader\";\r\nimport cssObject from \"./Profile.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className={cssObject.content}>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"empty status\"}</span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n// if (!props.profile) {\r\n// return <Preloader />;\r\n//}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport cssObject from \"./Profile.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div className={cssObject.content}>\r\n      <img src={props.profile.photos.large} alt='UserPhoto' className={cssObject.userPhoto} />\r\n      <div>\r\n        <h3>{props.profile.fullName}</h3>\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n        <p>About me: {props.profile.aboutMe}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport cssObject from \"./Profile.module.css\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={cssObject.content}>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getStatus, updateStatus } from \"./../../redux/profileReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/profile\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}