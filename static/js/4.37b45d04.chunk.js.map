{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","components/Dialogs/DialogsForm/DialogsForm.js","components/Dialogs/Dialogs.js","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","className","cssObject","item","active","to","id","name","Message","message","maxLength100","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","type","Dialogs","state","messagesPage","dialogElements","dialogs","map","d","dialogMessages","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,6FCW/HC,EARI,SAACC,GAClB,OACE,qBAAKC,UAAWC,IAAUC,KAAO,IAAMD,IAAUE,OAAjD,SACE,cAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,GAAjC,SAAsCN,EAAMO,UCCnCC,EAJC,SAACR,GACf,OAAO,qBAAKC,UAAWC,IAAUO,QAA1B,SAAoCT,EAAMS,W,mCCG7CC,EAAeC,YAAiB,KAwBvBC,EAJUC,YAAU,CACjCC,KAAM,eADiBD,EAnBL,SAACb,GACnB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,YAAY,oBACZX,KAAK,iBACLY,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBa,KAAK,WAGT,8BACE,kDCQOC,EAxBC,SAACxB,GACf,IAAIyB,EAAQzB,EAAM0B,aAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAYxB,GAAIwB,EAAExB,GAAeC,KAAMuB,EAAEvB,MAAduB,EAAExB,OAEvEyB,EAAiBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OAAO,cAAC,EAAD,CAAS3B,GAAI2B,EAAE3B,GAAeG,QAASwB,EAAExB,SAAjBwB,EAAE3B,OAMzE,OACE,sBAAKL,UAAWC,IAAU0B,QAA1B,UACE,qBAAK3B,UAAWC,IAAUgC,aAA1B,SAAyCP,IACzC,sBAAK1B,UAAWC,IAAU8B,SAA1B,UACE,8BAAMD,IACN,8BACE,cAAC,EAAD,CAAkBhB,SAVN,SAACoB,GACnBnC,EAAMoC,YAAYD,EAAOE,4B,gECVzBC,EAA6B,SAACb,GAAD,MAAY,CAC3Cc,OAAQd,EAAMe,KAAKD,S,QCeNE,sBAAQC,aAdD,SAACjB,GACrB,MAAO,CACLC,aAAcD,EAAMC,iBAIC,SAACiB,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,EAASC,YAAmBP,UDPF,SAACQ,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK/C,MAAMuC,OACT,cAACM,EAAD,eAAeE,KAAK/C,QADI,cAAC,IAAD,CAAUK,GAAG,eAHH,GACb2C,IAAMH,WAWtC,OAJiCH,YAC/BJ,EACA,GAF+BI,CAG/BI,KCCWL,CAAwEjB","file":"static/js/4.37b45d04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Dokij\",\"dialogsItems\":\"Dialogs_dialogsItems__1kFBB\",\"active\":\"Dialogs_active__2oLAr\",\"messages\":\"Dialogs_messages__2-rxi\"};","import React from \"react\";\r\nimport cssObject from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={cssObject.item + \" \" + cssObject.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport cssObject from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst Message = (props) => {\r\n  return <div className={cssObject.message}>{props.message}</div>;\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validators\";\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\nconst DialogsForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder=\"Type your message\"\r\n          name=\"newMessageBody\"\r\n          component={Textarea}\r\n          validate={[required, maxLength100]}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DialogsReduxForm = reduxForm({\r\n  form: \"dialogsForm\",\r\n})(DialogsForm);\r\n\r\nexport default DialogsReduxForm;\r\n","import React from \"react\";\r\nimport cssObject from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport DialogsReduxForm from \"./DialogsForm/DialogsForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.messagesPage;\r\n\r\n  let dialogElements = state.dialogs.map((d) => <DialogItem id={d.id} key={d.id} name={d.name} />);\r\n\r\n  let dialogMessages = state.messages.map((m) => <Message id={m.id} key={m.id} message={m.message} />);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={cssObject.dialogs}>\r\n      <div className={cssObject.dialogsItems}>{dialogElements}</div>\r\n      <div className={cssObject.messages}>\r\n        <div>{dialogMessages}</div>\r\n        <div>\r\n          <DialogsReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedRedirectComponent = connect(\r\n    mapStateToPropsForRedirect,\r\n    {}\r\n  )(RedirectComponent);\r\n  return ConnectedRedirectComponent;\r\n};\r\n","import Dialogs from \"./Dialogs\";\r\nimport { sendMessageCreator } from \"../../redux/dialogsReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"./../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesPage: state.messagesPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}